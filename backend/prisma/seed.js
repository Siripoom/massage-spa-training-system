const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting seed process...');

  // Clear existing data
  console.log('üßπ Cleaning existing data...');
  await prisma.attendance.deleteMany();
  await prisma.studentApplication.deleteMany();
  await prisma.enrollment.deleteMany();
  await prisma.batch.deleteMany();
  await prisma.certificate.deleteMany();
  await prisma.payment.deleteMany();
  await prisma.paymentPlan.deleteMany();
  await prisma.schedules.deleteMany();
  await prisma.organization.deleteMany();
  await prisma.course.deleteMany();
  await prisma.address.deleteMany();
  await prisma.user.deleteMany();

  // Create Users (based on old system patterns)
  console.log('üë• Creating users...');
  const hashedPassword = await bcrypt.hash('password123', 12);

  // Admin Users
  const admin = await prisma.user.create({
    data: {
      firstName: '‡∏™‡∏∏‡∏û‡∏±‡∏ï‡∏£‡∏≤',
      lastName: '‡∏î‡∏µ‡πÄ‡∏•‡∏¥‡∏®',
      email: 'admin@relaxplus.com',
      phone: '081-111-1111',
      role: 'ADMIN',
      password: hashedPassword,
      birthDate: new Date('1980-05-15'),
      imageUrl: 'https://images.unsplash.com/photo-1494790108755-2616b612b5fd?w=400',
      address: {
        create: {
          address: '123 ‡∏ñ.‡∏£‡∏±‡∏ä‡∏î‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å',
          city: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
          state: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
          country: '‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢',
          zipCode: '10400'
        }
      }
    }
  });

  // Teacher Users
  const teacher1 = await prisma.user.create({
    data: {
      firstName: '‡∏ß‡∏¥‡∏ä‡∏≤‡∏ç',
      lastName: '‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢',
      email: 'teacher@relaxplus.com',
      phone: '082-222-2222',
      role: 'TEACHER',
      password: hashedPassword,
      birthDate: new Date('1975-08-20'),
      imageUrl: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400'
    }
  });

  // Student Users (based on typical Thai names from old system)
  const students = [];
  const studentData = [
    { firstName: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢', lastName: '‡πÉ‡∏à‡∏î‡∏µ', email: 'somchai@email.com', phone: '083-333-3301' },
    { firstName: '‡∏™‡∏∏‡∏ä‡∏≤‡∏î‡∏≤', lastName: '‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°', email: 'suchada@email.com', phone: '083-333-3302' },
    { firstName: '‡∏ô‡∏¥‡∏£‡∏±‡∏ô‡∏î‡∏£‡πå', lastName: '‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏≤‡∏à', email: 'niran@email.com', phone: '083-333-3303' },
    { firstName: '‡∏ß‡∏£‡∏£‡∏ì‡∏≤', lastName: '‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à', email: 'wanna@email.com', phone: '083-333-3304' },
    { firstName: '‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå', lastName: '‡∏´‡∏ô‡∏±‡∏Å‡πÅ‡∏ô‡πà‡∏ô', email: 'prayuth@email.com', phone: '083-333-3305' },
    { firstName: '‡∏°‡∏≤‡∏•‡∏µ', lastName: '‡∏≠‡πà‡∏≠‡∏ô‡πÇ‡∏¢‡∏ô', email: 'malee@email.com', phone: '083-333-3306' },
    { firstName: '‡∏™‡∏¥‡∏£‡∏¥‡∏û‡∏£', lastName: '‡πÄ‡∏â‡∏µ‡∏¢‡∏ö‡πÅ‡∏´‡∏•‡∏°', email: 'siriporn@email.com', phone: '083-333-3307' },
    { firstName: '‡∏≠‡∏ô‡∏∏‡∏ä‡∏≤', lastName: '‡∏£‡∏≠‡∏ö‡∏£‡∏π‡πâ', email: 'anucha@email.com', phone: '083-333-3308' },
    { firstName: '‡∏Å‡∏ô‡∏Å‡∏ß‡∏£‡∏£‡∏ì', lastName: '‡∏™‡∏î‡πÉ‡∏™', email: 'kanowan@email.com', phone: '083-333-3309' },
    { firstName: '‡πÄ‡∏™‡∏Å‡∏™‡∏£‡∏£', lastName: '‡πÅ‡∏Å‡∏•‡πâ‡∏ß‡∏Å‡∏•‡πâ‡∏≤', email: 'seksan@email.com', phone: '083-333-3310' },
    { firstName: '‡∏®‡∏®‡∏¥‡∏ò‡∏£', lastName: '‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç', email: 'sasitorn@email.com', phone: '083-333-3311' },
    { firstName: '‡∏£‡∏±‡∏ä‡∏ô‡∏µ', lastName: '‡πÉ‡∏™‡πà‡πÉ‡∏à', email: 'rachanee@email.com', phone: '083-333-3312' },
    { firstName: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£', lastName: '‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á', email: 'thanakan@email.com', phone: '083-333-3313' },
    { firstName: '‡∏û‡∏£‡∏ó‡∏¥‡∏û‡∏¢‡πå', lastName: '‡∏á‡∏≤‡∏°‡∏™‡∏á‡πà‡∏≤', email: 'porntip@email.com', phone: '083-333-3314' },
    { firstName: '‡∏ä‡∏±‡∏¢‡∏ß‡∏±‡∏í‡∏ô‡πå', lastName: '‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà', email: 'chaiwat@email.com', phone: '083-333-3315' }
  ];

  for (const studentInfo of studentData) {
    const student = await prisma.user.create({
      data: {
        firstName: studentInfo.firstName,
        lastName: studentInfo.lastName,
        email: studentInfo.email,
        phone: studentInfo.phone,
        role: 'STUDENT',
        password: hashedPassword,
        birthDate: new Date(1990 + Math.floor(Math.random() * 10), Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1),
        imageUrl: `https://images.unsplash.com/photo-${1500000000 + Math.floor(Math.random() * 100000000)}?w=400`,
        address: {
          create: {
            address: `${Math.floor(Math.random() * 999) + 1} ‡∏´‡∏°‡∏π‡πà ${Math.floor(Math.random() * 20) + 1}`,
            city: ['‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø', '‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ', '‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ', '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£'][Math.floor(Math.random() * 4)],
            state: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏¥‡∏°‡∏ì‡∏ë‡∏•',
            country: '‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢',
            zipCode: `${10000 + Math.floor(Math.random() * 9000)}`
          }
        }
      }
    });
    students.push(student);
  }

  // Create Courses (based on old system - ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û 150 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
  console.log('üìö Creating courses...');
  const thaiMassageCourse = await prisma.course.create({
    data: {
      title: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û',
      description: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡πÅ‡∏ú‡∏ô‡πÑ‡∏ó‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡πÅ‡∏ú‡∏ô‡πÑ‡∏ó‡∏¢‡∏ï‡πâ‡∏ô‡∏ï‡∏≥‡∏£‡∏±‡∏ö ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û',
      imageUrl: 'https://images.unsplash.com/photo-1600334129128-685c5582fd35?w=800',
      price: 15000.00,
      duration: 150, // 150 hours as per old system
      requirements: '‡∏≠‡∏≤‡∏¢‡∏∏ 18 ‡∏õ‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ, ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á, ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ ‡∏°.3',
      status: 'ACTIVE',
      registrationStart: new Date('2024-01-01'),
      registrationEnd: new Date('2025-12-31')
    }
  });

  const aromaMassageCourse = await prisma.course.create({
    data: {
      title: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡∏≠‡πÇ‡∏£‡∏°‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏£‡∏≤‡∏õ‡∏µ',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏´‡∏≠‡∏°‡∏£‡∏∞‡πÄ‡∏´‡∏¢ ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ú‡∏™‡∏°‡∏ú‡∏™‡∏≤‡∏ô‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÑ‡∏≠ ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£',
      imageUrl: 'https://images.unsplash.com/photo-1544161515-4ab6ce6db874?w=800',
      price: 18000.00,
      duration: 120,
      requirements: '‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏à‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
      status: 'ACTIVE',
      registrationStart: new Date('2024-01-01'),
      registrationEnd: new Date('2025-12-31')
    }
  });

  const therapeuticMassageCourse = await prisma.course.create({
    data: {
      title: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π',
      description: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏ö‡∏±‡∏î ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π‡∏™‡∏†‡∏≤‡∏û‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢',
      imageUrl: 'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800',
      price: 22000.00,
      duration: 180,
      requirements: '‡∏à‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
      status: 'ACTIVE',
      registrationStart: new Date('2024-01-01'),
      registrationEnd: new Date('2025-12-31')
    }
  });

  // Create Batches (based on old system ‡∏£‡∏∏‡πà‡∏ô 30, 31, 32...)
  console.log('üéì Creating batches...');
  const batches = [];

  // Thai Massage Course Batches
  const batch30 = await prisma.batch.create({
    data: {
      courseId: thaiMassageCourse.id,
      batchNumber: 30,
      name: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà 30',
      startDate: new Date('2024-01-15'),
      endDate: new Date('2024-04-15'),
      maxStudents: 25,
      currentStudents: 23,
      status: 'COMPLETED',
      totalHours: 150,
      description: '‡∏£‡∏∏‡πà‡∏ô‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ 2567 ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°-‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô',
      location: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A ‡∏ä‡∏±‡πâ‡∏ô 2'
    }
  });

  const batch31 = await prisma.batch.create({
    data: {
      courseId: thaiMassageCourse.id,
      batchNumber: 31,
      name: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà 31',
      startDate: new Date('2024-05-01'),
      endDate: new Date('2024-08-01'),
      maxStudents: 30,
      currentStudents: 28,
      status: 'COMPLETED',
      totalHours: 150,
      description: '‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ 2567 ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°-‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°',
      location: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A ‡∏ä‡∏±‡πâ‡∏ô 2'
    }
  });

  const batch32 = await prisma.batch.create({
    data: {
      courseId: thaiMassageCourse.id,
      batchNumber: 32,
      name: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà 32',
      startDate: new Date('2024-09-01'),
      endDate: new Date('2024-12-01'),
      maxStudents: 30,
      currentStudents: 15,
      status: 'ACTIVE',
      totalHours: 150,
      description: '‡∏£‡∏∏‡πà‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô',
      location: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A ‡∏ä‡∏±‡πâ‡∏ô 2'
    }
  });

  // Aroma Massage Batches
  const aromaBatch1 = await prisma.batch.create({
    data: {
      courseId: aromaMassageCourse.id,
      batchNumber: 1,
      name: '‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡∏≠‡πÇ‡∏£‡∏°‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏£‡∏≤‡∏õ‡∏µ ‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà 1',
      startDate: new Date('2024-02-01'),
      endDate: new Date('2024-05-01'),
      maxStudents: 20,
      currentStudents: 18,
      status: 'COMPLETED',
      totalHours: 120,
      location: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ B ‡∏ä‡∏±‡πâ‡∏ô 1'
    }
  });

  batches.push(batch30, batch31, batch32, aromaBatch1);

  // Create Enrollments for completed batches
  console.log('üìù Creating enrollments...');
  const enrollments = [];

  // Enroll students in batch 30 (completed)
  for (let i = 0; i < 12; i++) {
    const enrollment = await prisma.enrollment.create({
      data: {
        userId: students[i].id,
        courseId: thaiMassageCourse.id,
        batchId: batch30.id,
        status: 'COMPLETED'
      }
    });
    enrollments.push(enrollment);
  }

  // Enroll students in batch 31 (completed)
  for (let i = 12; i < 15; i++) {
    const enrollment = await prisma.enrollment.create({
      data: {
        userId: students[i].id,
        courseId: thaiMassageCourse.id,
        batchId: batch31.id,
        status: 'COMPLETED'
      }
    });
    enrollments.push(enrollment);
  }

  // Enroll students in batch 32 (active)
  for (let i = 3; i < 8; i++) {
    const enrollment = await prisma.enrollment.create({
      data: {
        userId: students[i].id,
        courseId: thaiMassageCourse.id,
        batchId: batch32.id,
        status: 'ACTIVE'
      }
    });
    enrollments.push(enrollment);
  }

  // Create Student Applications
  console.log('üìã Creating student applications...');
  
  // Pending applications for batch 32
  for (let i = 8; i < 12; i++) {
    await prisma.studentApplication.create({
      data: {
        userId: students[i].id,
        courseId: thaiMassageCourse.id,
        batchId: batch32.id,
        status: 'PENDING',
        personalInfo: {
          education: '‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡∏≠‡∏ô‡∏õ‡∏•‡∏≤‡∏¢',
          experience: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå',
          motivation: '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û',
          healthCondition: '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß'
        },
        documents: [
          '/uploads/transcripts/transcript_' + students[i].id + '.pdf',
          '/uploads/id-cards/id_' + students[i].id + '.jpg'
        ],
        notes: '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå'
      }
    });
  }

  // Create Attendance Records for active batch (batch 32)
  console.log('‚è∞ Creating attendance records...');
  const activeEnrollments = enrollments.filter(e => e.batchId === batch32.id);
  
  // Create attendance for the past 30 days
  const startDate = new Date('2024-09-01');
  const today = new Date();
  
  for (let d = new Date(startDate); d <= today; d.setDate(d.getDate() + 1)) {
    // Skip weekends for this demo
    if (d.getDay() === 0 || d.getDay() === 6) continue;
    
    for (const enrollment of activeEnrollments) {
      const attendanceStatus = Math.random() > 0.15 ? 'PRESENT' : (Math.random() > 0.5 ? 'LATE' : 'ABSENT');
      
      if (attendanceStatus === 'PRESENT' || attendanceStatus === 'LATE') {
        const timeIn = attendanceStatus === 'LATE' ? '09:15:00' : '09:00:00';
        const timeOut = '17:00:00';
        
        await prisma.attendance.create({
          data: {
            enrollmentId: enrollment.id,
            batchId: enrollment.batchId,
            userId: enrollment.userId,
            date: new Date(d),
            timeIn: new Date(`${d.toISOString().split('T')[0]}T${timeIn}`),
            timeOut: new Date(`${d.toISOString().split('T')[0]}T${timeOut}`),
            totalHours: 8.0,
            status: attendanceStatus,
            notes: attendanceStatus === 'LATE' ? '‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏¢ 15 ‡∏ô‡∏≤‡∏ó‡∏µ' : null
          }
        });
      } else {
        await prisma.attendance.create({
          data: {
            enrollmentId: enrollment.id,
            batchId: enrollment.batchId,
            userId: enrollment.userId,
            date: new Date(d),
            totalHours: 0,
            status: attendanceStatus,
            notes: '‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'
          }
        });
      }
    }
  }

  console.log('‚úÖ Seed completed successfully!');
  
  // Summary
  const userCount = await prisma.user.count();
  const courseCount = await prisma.course.count();
  const batchCount = await prisma.batch.count();
  const enrollmentCount = await prisma.enrollment.count();
  const applicationCount = await prisma.studentApplication.count();
  const attendanceCount = await prisma.attendance.count();

  console.log(`
üìä Seed Summary:
- Users: ${userCount} (1 Admin, 1 Teacher, ${userCount - 2} Students)
- Courses: ${courseCount}
- Batches: ${batchCount}
- Enrollments: ${enrollmentCount}
- Applications: ${applicationCount}
- Attendance Records: ${attendanceCount}
  `);
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
