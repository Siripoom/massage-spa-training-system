{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/massage-spa-training-system/frontend/src/app/%28pages%29/admin/quiz/manage/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport '@ant-design/v5-patch-for-react-19';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, Space, Card, Typography, message, Radio, Popconfirm, Row, Col } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, SaveOutlined, ArrowLeftOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { v4 as uuidv4 } from 'uuid'; // สำหรับสร้าง unique ID\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport dayjs from 'dayjs';\r\n\r\nconst { Title: AntdTitle, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\n\r\n// --- Standardized Interfaces ---\r\ninterface Option {\r\n  id: string; // ID ควรเป็น string เสมอ\r\n  text: string;\r\n}\r\n\r\ninterface Question {\r\n  id: string;\r\n  questionText: string;\r\n  options: Option[];\r\n  correctOptionId: string; // ID ของตัวเลือกที่ถูกต้อง\r\n}\r\n\r\ninterface Quiz {\r\n  id: string;\r\n  title: string; // ชื่อข้อสอบ\r\n  description: string; // คำอธิบายทั่วไปของข้อสอบ\r\n  course: string; // หลักสูตรที่เกี่ยวข้อง\r\n  numQuestions: number; // จำนวนคำถามในข้อสอบ (จะถูกคำนวณจาก questions.length)\r\n  status: 'draft' | 'published'; // สถานะของข้อสอบ\r\n  questions: Question[];\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n// Interface สำหรับค่าในฟอร์มหลักของ Quiz\r\ninterface QuizFormValues {\r\n  title: string;\r\n  description: string;\r\n  course: string; // เพิ่ม course เข้ามาในฟhอร์ม\r\n}\r\n\r\n// Interface สำหรับค่าในฟอร์มของ Question\r\ninterface QuestionFormValues {\r\n  id?: string;\r\n  questionText: string;\r\n  options: { id?: string; text: string }[]; // id อาจเป็น undefined ในจังหวะแรก\r\n  correctOptionId: string;\r\n}\r\n\r\n\r\nexport default function ManageQuizPage() {\r\n  const [form] = Form.useForm<QuizFormValues>();\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const quizId = searchParams.get('id');\r\n\r\n  const [quiz, setQuiz] = useState<Quiz | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [editingQuestionIndex, setEditingQuestionIndex] = useState<number | null>(null);\r\n  const [currentQuestionForm] = Form.useForm<QuestionFormValues>();\r\n\r\n  // Use Form.useWatch to get real-time options from the form\r\n  // Type it as an array of objects that match the Form.List structure\r\n  const currentOptions: { id?: string; text: string }[] | undefined = Form.useWatch('options', currentQuestionForm);\r\n\r\n  useEffect(() => {\r\n    const initializeQuiz = () => {\r\n      if (quizId) {\r\n        const storedQuizzes = JSON.parse(localStorage.getItem('quizzes') || '[]') as Quiz[];\r\n        const foundQuiz = storedQuizzes.find(q => q.id === quizId);\r\n        if (foundQuiz) {\r\n          setQuiz(foundQuiz);\r\n          form.setFieldsValue({\r\n            title: foundQuiz.title,\r\n            description: foundQuiz.description,\r\n            course: foundQuiz.course,\r\n          });\r\n        } else {\r\n          message.error('ไม่พบข้อสอบที่ต้องการแก้ไข');\r\n          router.push('/admin/quiz');\r\n        }\r\n      } else {\r\n        const newQuiz: Quiz = {\r\n          id: uuidv4(),\r\n          title: '',\r\n          description: '',\r\n          course: '',\r\n          numQuestions: 0,\r\n          status: 'draft',\r\n          questions: [],\r\n          createdAt: dayjs().toISOString(),\r\n          updatedAt: dayjs().toISOString(),\r\n        };\r\n        setQuiz(newQuiz);\r\n        form.setFieldsValue({\r\n          title: newQuiz.title,\r\n          description: newQuiz.description,\r\n          course: newQuiz.course,\r\n        });\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initializeQuiz();\r\n  }, [quizId, form, router]);\r\n\r\n  const handleQuizFormChange = (changedValues: Partial<QuizFormValues>, allValues: QuizFormValues) => {\r\n    if (quiz) {\r\n      setQuiz(prev => {\r\n        if (!prev) return null;\r\n        return {\r\n          ...prev,\r\n          title: allValues.title,\r\n          description: allValues.description,\r\n          course: allValues.course,\r\n          updatedAt: dayjs().toISOString(),\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    currentQuestionForm.resetFields();\r\n    const initialOptions = [{ id: uuidv4(), text: '' }, { id: uuidv4(), text: '' }];\r\n    currentQuestionForm.setFieldsValue({\r\n      questionText: '',\r\n      options: initialOptions,\r\n      correctOptionId: '',\r\n    });\r\n    setEditingQuestionIndex(null);\r\n    const questionFormElement = document.getElementById('question-form-card');\r\n    if (questionFormElement) {\r\n      questionFormElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  };\r\n\r\n  const handleEditQuestion = (index: number) => {\r\n    setEditingQuestionIndex(index);\r\n    if (quiz) {\r\n      const questionToEdit = quiz.questions[index];\r\n      currentQuestionForm.setFieldsValue(questionToEdit);\r\n    }\r\n    const questionFormElement = document.getElementById('question-form-card');\r\n    if (questionFormElement) {\r\n      questionFormElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  };\r\n\r\n  const handleSaveQuestion = async () => {\r\n    try {\r\n      console.log('Values before validation:', currentQuestionForm.getFieldsValue());\r\n\r\n      const values: QuestionFormValues = await currentQuestionForm.validateFields();\r\n\r\n      console.log('Values after validation:', values);\r\n      console.log('Selected correctOptionId:', values.correctOptionId);\r\n      console.log('Options array:', values.options);\r\n\r\n      // Ensure that all options have an ID before checking selectedOptionExists\r\n      const optionsWithIds = values.options.map(opt => ({\r\n        id: opt.id || uuidv4(), // Ensure ID is always present\r\n        text: opt.text,\r\n      }));\r\n\r\n      const selectedOptionExists = optionsWithIds.some(opt => opt.id === values.correctOptionId);\r\n      console.log('selectedOptionExists:', selectedOptionExists);\r\n\r\n      if (!selectedOptionExists) {\r\n        message.error('กรุณาเลือกคำตอบที่ถูกต้องสำหรับคำถามนี้!');\r\n        currentQuestionForm.setFields([\r\n          {\r\n            name: 'correctOptionId',\r\n            errors: ['กรุณาเลือกคำตอบที่ถูกต้อง!'],\r\n          },\r\n        ]);\r\n        return;\r\n      }\r\n\r\n      const newQuestion: Question = {\r\n        id: values.id || uuidv4(),\r\n        questionText: values.questionText,\r\n        options: optionsWithIds, // Use optionsWithIds here\r\n        correctOptionId: values.correctOptionId,\r\n      };\r\n\r\n      setQuiz(prev => {\r\n        if (!prev) return null;\r\n        const updatedQuestions = [...prev.questions];\r\n        if (editingQuestionIndex !== null) {\r\n          updatedQuestions[editingQuestionIndex] = newQuestion;\r\n        } else {\r\n          updatedQuestions.push(newQuestion);\r\n        }\r\n        return {\r\n          ...prev,\r\n          questions: updatedQuestions,\r\n          numQuestions: updatedQuestions.length,\r\n          updatedAt: dayjs().toISOString(),\r\n        };\r\n      });\r\n\r\n      message.success('บันทึกคำถามเรียบร้อย!');\r\n      currentQuestionForm.resetFields();\r\n      setEditingQuestionIndex(null);\r\n    } catch (error) {\r\n      console.error('Failed to save question (validation error):', error);\r\n    }\r\n  };\r\n\r\n  const handleCancelQuestionEdit = () => {\r\n    currentQuestionForm.resetFields();\r\n    setEditingQuestionIndex(null);\r\n  };\r\n\r\n  const handleRemoveQuestion = (index: number) => {\r\n    setQuiz(prev => {\r\n      if (!prev) return null;\r\n      const updatedQuestions = prev.questions.filter((_, i) => i !== index);\r\n      return {\r\n        ...prev,\r\n        questions: updatedQuestions,\r\n        numQuestions: updatedQuestions.length,\r\n        updatedAt: dayjs().toISOString(),\r\n      };\r\n    });\r\n    message.success('ลบคำถามเรียบร้อย!');\r\n    if (editingQuestionIndex === index) {\r\n      currentQuestionForm.resetFields();\r\n      setEditingQuestionIndex(null);\r\n    } else if (editingQuestionIndex !== null && editingQuestionIndex > index) {\r\n      setEditingQuestionIndex(editingQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleSaveQuiz = () => {\r\n    form.validateFields()\r\n      .then(() => {\r\n        if (!quiz) {\r\n          message.error('ข้อสอบยังไม่ถูกโหลดหรือสร้างขึ้น');\r\n          return;\r\n        }\r\n        if (quiz.questions.length === 0) {\r\n          message.error('กรุณาเพิ่มคำถามอย่างน้อย 1 ข้อ');\r\n          return;\r\n        }\r\n        const storedQuizzes = JSON.parse(localStorage.getItem('quizzes') || '[]') as Quiz[];\r\n        let updatedQuizzes: Quiz[];\r\n\r\n        if (quizId) {\r\n          updatedQuizzes = storedQuizzes.map(q => q.id === quiz.id ? quiz : q);\r\n          message.success('แก้ไขข้อสอบเรียบร้อย!');\r\n        } else {\r\n          updatedQuizzes = [...storedQuizzes, quiz];\r\n          message.success('สร้างข้อสอบเรียบร้อย!');\r\n        }\r\n        localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\r\n        router.push('/admin/quiz');\r\n      })\r\n      .catch(info => {\r\n        message.error('กรุณากรอกข้อมูลข้อสอบให้ครบถ้วน');\r\n        console.log('Validate Failed:', info);\r\n      });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    router.push('/admin/quiz');\r\n  };\r\n\r\n  if (loading || !quiz) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <Text>กำลังโหลด...</Text>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n      <AntdTitle level={1} className=\"text-3xl font-bold mb-8 text-gray-800\">\r\n        {quizId ? 'แก้ไขข้อสอบ' : 'สร้างข้อสอบใหม่'}\r\n      </AntdTitle>\r\n\r\n      {/* ใช้ Row และ Col เพื่อจัดระยะห่างระหว่าง Card และส่วนปุ่มสุดท้าย */}\r\n      <Row gutter={[0, 24]}> {/* gutter={[horizontal, vertical]} */}\r\n        <Col span={24}>\r\n          <Card className=\"rounded-xl shadow-custom-light p-4\">\r\n            <AntdTitle level={4} className=\"text-gray-700 mb-6\">ข้อมูลข้อสอบ</AntdTitle>\r\n            <Form\r\n              form={form}\r\n              layout=\"vertical\"\r\n              onValuesChange={handleQuizFormChange}\r\n            >\r\n              <Form.Item\r\n                name=\"title\"\r\n                label={<span className=\"font-semibold text-gray-700\">ชื่อข้อสอบ</span>}\r\n                rules={[{ required: true, message: 'กรุณากรอกชื่อข้อสอบ!' }]}\r\n              >\r\n                <Input placeholder=\"เช่น ข้อสอบนวดแผนไทยเบื้องต้น\" className=\"rounded-lg\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"course\"\r\n                label={<span className=\"font-semibold text-gray-700\">หลักสูตร</span>}\r\n                rules={[{ required: true, message: 'กรุณากรอกหลักสูตรที่เกี่ยวข้อง!' }]}\r\n              >\r\n                <Input placeholder=\"เช่น นวดแผนไทยเบื้องต้น\" className=\"rounded-lg\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label={<span className=\"font-semibold text-gray-700\">คำอธิบาย</span>}\r\n              >\r\n                <TextArea rows={3} placeholder=\"คำอธิบายข้อสอบ (ไม่บังคับ)\" className=\"rounded-lg\" />\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Card className=\"rounded-xl shadow-custom-light p-4\">\r\n            <AntdTitle level={4} className=\"text-gray-700 mb-6\">รายการคำถาม</AntdTitle>\r\n            {quiz.questions.length === 0 && (\r\n              <div className=\"text-center text-gray-500 mb-4\">ยังไม่มีคำถามในข้อสอบนี้</div>\r\n            )}\r\n            <Space direction=\"vertical\" className=\"w-full\" size=\"middle\">\r\n              {quiz.questions.map((q, index) => (\r\n                <Card\r\n                  key={q.id}\r\n                  size=\"small\"\r\n                  className=\"rounded-lg border border-gray-200\"\r\n                  extra={\r\n                    <Space>\r\n                      <Button\r\n                        type=\"text\"\r\n                        icon={<EditOutlined />}\r\n                        onClick={() => handleEditQuestion(index)}\r\n                        className=\"text-blue-500 hover:text-blue-700\"\r\n                      />\r\n                      <Popconfirm\r\n                        title=\"ลบคำถาม\"\r\n                        description=\"คุณแน่ใจหรือไม่ที่จะลบคำถามนี้?\"\r\n                        onConfirm={() => handleRemoveQuestion(index)}\r\n                        okText=\"ใช่\"\r\n                        cancelText=\"ไม่\"\r\n                      >\r\n                        <Button\r\n                          type=\"text\"\r\n                          icon={<DeleteOutlined />}\r\n                          danger\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        />\r\n                      </Popconfirm>\r\n                    </Space>\r\n                  }\r\n                >\r\n                  <Text strong>{index + 1}. {q.questionText}</Text>\r\n                  <Radio.Group value={q.correctOptionId} className=\"w-full mt-2\">\r\n                    {q.options.map(opt => (\r\n                      <div key={opt.id} className=\"flex items-center mb-1\">\r\n                        <Radio value={opt.id} disabled className=\"mr-2\" />\r\n                        <Text className={opt.id === q.correctOptionId ? 'font-bold text-green-600' : ''}>\r\n                          {opt.text}\r\n                        </Text>\r\n                      </div>\r\n                    ))}\r\n                  </Radio.Group>\r\n                </Card>\r\n              ))}\r\n            </Space>\r\n            <Button\r\n              type=\"dashed\"\r\n              onClick={handleAddQuestion}\r\n              block\r\n              icon={<PlusOutlined />}\r\n              className=\"mt-6 rounded-lg text-blue-500 border-blue-500 hover:text-blue-700 hover:border-blue-700\"\r\n            >\r\n              เพิ่มคำถามใหม่\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Question Creation/Edit Form */}\r\n        <Col span={24}>\r\n          <Card id=\"question-form-card\" className=\"rounded-xl shadow-custom-light p-4\">\r\n            <AntdTitle level={4} className=\"text-gray-700 mb-6\">\r\n              {editingQuestionIndex !== null ? 'แก้ไขคำถาม' : 'เพิ่มคำถาม'}\r\n            </AntdTitle>\r\n            <Form form={currentQuestionForm} layout=\"vertical\">\r\n              <Form.Item name=\"id\" hidden>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"questionText\"\r\n                label={<span className=\"font-semibold text-gray-700\">คำถาม</span>}\r\n                rules={[{ required: true, message: 'กรุณากรอกคำถาม!' }]}\r\n              >\r\n                <TextArea rows={2} placeholder=\"เช่น ข้อใดคือน้ำมันนวดที่นิยมใช้ในสปา?\" className=\"rounded-lg\" />\r\n              </Form.Item>\r\n\r\n              {/* Form.List for managing options (text input and delete button) */}\r\n              <Form.List name=\"options\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    <AntdTitle level={5} className=\"text-gray-700 mb-4\">ตัวเลือก</AntdTitle>\r\n                    {fields.map(({ key, name }) => {\r\n                      return (\r\n                        <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\" className=\"w-full\">\r\n                          {/* Hidden Form.Item for the option's actual ID */}\r\n                          <Form.Item\r\n                            name={[name, 'id']}\r\n                            hidden\r\n                            noStyle\r\n                          >\r\n                            <Input />\r\n                          </Form.Item>\r\n\r\n                          {/* Input for option text */}\r\n                          <Form.Item\r\n                            name={[name, 'text']}\r\n                            rules={[{ required: true, message: 'กรุณากรอกตัวเลือก!' }]}\r\n                            className=\"flex-grow\"\r\n                            noStyle\r\n                          >\r\n                            <Input\r\n                              placeholder={`ตัวเลือก ${name + 1}`}\r\n                              className=\"rounded-lg\"\r\n                            />\r\n                          </Form.Item>\r\n\r\n                          {fields.length > 2 && (\r\n                            <Button\r\n                              type=\"text\"\r\n                              danger\r\n                              icon={<DeleteOutlined />}\r\n                              onClick={() => remove(name)}\r\n                              className=\"text-red-500 hover:text-red-700 ml-2\"\r\n                            />\r\n                          )}\r\n                        </Space>\r\n                      );\r\n                    })}\r\n                    <Button\r\n                      type=\"dashed\"\r\n                      onClick={() => add({ id: uuidv4(), text: '' })}\r\n                      block\r\n                      icon={<PlusOutlined />}\r\n                      className=\"mt-4 rounded-lg text-green-500 border-green-500 hover:text-green-700 hover:border-green-700\"\r\n                    >\r\n                      เพิ่มตัวเลือก\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n\r\n              {/* Separate Form.Item for correctOptionId and Radio.Group */}\r\n              {/* This Radio.Group will display options based on currentOptions watched from the form */}\r\n              <Form.Item\r\n                name=\"correctOptionId\"\r\n                label={<span className=\"font-semibold text-gray-700 mt-4\">เลือกคำตอบที่ถูกต้อง</span>}\r\n                rules={[{ required: true, message: 'กรุณาเลือกคำตอบที่ถูกต้อง!' }]}\r\n              >\r\n                <Radio.Group className=\"w-full\">\r\n                  {/* Ensure currentOptions is not null before mapping */}\r\n                  {currentOptions && currentOptions.map((option, index) => {\r\n                    // Ensure option.id is a string for key and value props\r\n                    const radioValue = option.id || `temp-${index}`; // Fallback to a temporary string if ID is undefined\r\n                    return (\r\n                      <Radio key={radioValue} value={radioValue} className=\"block mb-2\">\r\n                        {/* Display option text as the label for the radio button */}\r\n                        {option.text || `ตัวเลือก ${index + 1}`}\r\n                      </Radio>\r\n                    );\r\n                  })}\r\n                </Radio.Group>\r\n              </Form.Item>\r\n\r\n\r\n              <Space className=\"mt-6 w-full justify-end\">\r\n                <Button\r\n                  onClick={handleCancelQuestionEdit}\r\n                  className=\"rounded-lg shadow-md px-6 py-3 text-base\"\r\n                >\r\n                  ยกเลิก\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<SaveOutlined />}\r\n                  onClick={handleSaveQuestion}\r\n                  className=\"bg-blue-500 hover:bg-blue-600 text-white rounded-lg shadow-md px-6 py-3 text-base\"\r\n                >\r\n                  {editingQuestionIndex !== null ? 'บันทึกการแก้ไขคำถาม' : 'เพิ่มคำถามลงข้อสอบ'}\r\n                </Button>\r\n              </Space>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* ปุ่มบันทึกและกลับ อยู่ใน Col แยก เพื่อให้ได้รับ gutter จาก Row หลัก */}\r\n        <Col span={24}>\r\n          <Space className=\"w-full justify-center\">\r\n            <Button\r\n              icon={<ArrowLeftOutlined />}\r\n              onClick={handleCancel}\r\n              className=\"rounded-lg shadow-md px-6 py-3 text-base\"\r\n            >\r\n              กลับ\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<SaveOutlined />}\r\n              onClick={handleSaveQuiz}\r\n              className=\"bg-orange-500 hover:bg-orange-600 text-white rounded-lg shadow-md px-6 py-3 text-base\"\r\n            >\r\n              บันทึกข้อสอบ\r\n            </Button>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}